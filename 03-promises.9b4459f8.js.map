{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,YAAaF,SAASC,cAAc,uBACpCE,WAAYH,SAASC,cAAc,sBACnCG,aAAcJ,SAASC,cAAc,yBAGvC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAGLT,EAAKC,KAAKgB,iBAAiB,SAC7B,SAAuBC,GACrBA,EAAIC,iBAMJ,IAJA,IAAIC,EAAaC,OAAOrB,EAAKI,YAAYkB,OACrCC,EAAYF,OAAOrB,EAAKK,WAAWiB,OACnCE,EAAcH,OAAOrB,EAAKM,aAAagB,OAElCG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAAG,CAGxClB,EAAckB,EAFKL,EAAaG,EAAYE,GAGzCC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBX,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE9DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBX,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst elem = {\n  form: document.querySelector('.form'),\n  input_delay: document.querySelector('input[name=\"delay\"]'),\n  input_step: document.querySelector('input[name=\"step\"]'),\n  input_amount: document.querySelector('input[name=\"amount\"]')\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } \n      else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n }\n  elem.form.addEventListener('click', promiseCreate);\nfunction promiseCreate(evt) {\n  evt.preventDefault();\n\n  let delayValue = Number(elem.input_delay.value);\n  let stepValue = Number(elem.input_step.value);\n  let amountValue = Number(elem.input_amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    let promiseDelay = delayValue + stepValue * i;\n\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$elem","form","document","querySelector","input_delay","input_step","input_amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.9b4459f8.js.map"}